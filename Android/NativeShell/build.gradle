buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.27.1'
    }
}
apply plugin: 'android'
apply plugin: 'io.fabric'

def getVersionCode = { ->
    def code = project.hasProperty('versionCode') ? versionCode.toInteger() : 100
    return code
}

def getVersionName = { ->
    def name = project.hasProperty('versionName') ? versionName : "2.99.99"
    return name
}

def getReleaseNotes = { ->
    def notes = project.hasProperty('betaDistributionReleaseNotes') ? betaDistributionReleaseNotes : ""
    return notes
}

def getReleaseGroups = { ->
    def groups = project.hasProperty('betaDistributionGroupAliases') ? betaDistributionGroupAliases : ""
    return groups
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile project(':Hybrid')
    compile "com.android.support:appcompat-v7:23.2.0"
    compile("com.google.android.gms:play-services:7.0.0") {
        exclude module: 'ads'
        exclude module: 'support-v4'
    }
    compile("com.google.android.gms:play-services-ads:7.0.0") {
        exclude module: 'support-v4'
    }
    compile 'com.android.support:design:23.2.0'
    compile 'com.facebook.android:facebook-android-sdk:4.2.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.1@aar') {
        transitive = true;
    }
    compile('com.crashlytics.sdk.android:crashlytics-ndk:1.1.1@aar') {
        transitive = true
    }
    compile 'de.hdodenhof:circleimageview:1.3.0'

    compile 'com.android.support:multidex:1.0.0'

    // for testing
    testCompile 'junit:junit:4.12'
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'com.android.support.test:runner:0.4'
    // Set this dependency to use JUnit 4 rules
    androidTestCompile 'com.android.support.test:rules:0.4'
}

android {
    signingConfigs {
        packageRelease {
            keyAlias 'seriously_do_not_delete_this_file'
            keyPassword 'Sa4e63uCh4$robloxAndroid$'
            storeFile file('../robloxAndroidPK_DO_NOT_DELETE')
            storePassword 'Sa4e63uCh4$robloxAndroid$'
        }
    }
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    lintOptions {
        abortOnError false
    }
    enforceUniquePackageName = false;

    // Future TODO: change Apache HTTP usage to URLConnection
    // Apache HTTP deprecated since API-22, but used in ReCaptcha library
    // To continue using the Apache HTTP APIs, declare the following:
    useLibrary 'org.apache.http.legacy'

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']

            jni.srcDirs = []
            jniLibs.srcDirs = ['libs']
        }

        dev {
            res.srcDirs = ['dev']
            java.srcDirs = ['dev/src']
        }

        pub {
            res.srcDirs = ['pub']
            java.srcDirs = ['pub/src']
        }

        amazon {
            res.srcDirs = ['pub']
            java.srcDirs = ['pub/src']
        }

        // Organize test folders
        androidTest{
            setRoot('tests')
            java.srcDirs = ['tests/androidTests/src']
            res.srcDirs = ['tests/androidTests/res']
        }

        test {
            setRoot('tests')
            java.srcDirs = ['tests/unitTests/src']
            res.srcDirs = ['tests/unitTests/res']
        }

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    defaultConfig {
        versionCode getVersionCode()
        versionName getVersionName()
        targetSdkVersion 23
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

        // Enabling multidex support.
        multiDexEnabled true

        // Stops the Gradle pluginâ€™s automatic rasterization of vectors (AppCompat v23.2)
        generatedDensities = []
    }

    // Flag to tell aapt to keep the attribute ids around (AppCompat v23.2)
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }

    configurations.all {
        resolutionStrategy {
            force 'com.android.support:support-annotations:23.0.1'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.packageRelease
        }
    }
    splits {
        abi {
            enable true
            universalApk false
            reset()
            include 'armeabi'
        }
    }

    productFlavors {
        dev {
            applicationId "wtf.watrbx.client.dev"
            ext.betaDistributionReleaseNotes = getReleaseNotes()
            ext.betaDistributionGroupAliases = getReleaseGroups()
            buildConfigField "boolean", "USE_AMAZON_PURCHASING", "false"
        }
        pub {
            applicationId "wtf.watrbx.client"
            ext.betaDistributionReleaseNotes = getReleaseNotes()
            ext.betaDistributionGroupAliases = getReleaseGroups()
            buildConfigField "boolean", "USE_AMAZON_PURCHASING", "false"
        }
        amazon {
            applicationId "wtf.watrbx.client"
            ext.betaDistributionReleaseNotes = getReleaseNotes()
            ext.betaDistributionGroupAliases = getReleaseGroups()
            buildConfigField "boolean", "USE_AMAZON_PURCHASING", "true"
        }
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "2g"
    }
}

crashlytics {
    enableNdk true
    androidNdkOut 'jni/jniLibs/local/armeabi/'
    androidNdkLibsOut 'libs/'
}

task runNDKBuild(type:Exec) { //, 'NDK_OUT=libsDebug',
    commandLine 'F:\\ndk\\android-ndk-r10e\\ndk-build.cmd', '-C', 'jni', 'NDK_APP_OUT=jniLibs', 'NDK_OUT=libsDebug', 'RELEASE=1', 'PATH_PREFIX=../'
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn(runNDKBuild)
}
