//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=4.8.3928.0.
// 
namespace Roblox.Grid.Rcc
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "RCCServiceSoap", Namespace = "http://roblox.com/")]
    public partial class RCCServiceSoap : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;

        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;

        private System.Threading.SendOrPostCallback GetStatusOperationCompleted;

        private System.Threading.SendOrPostCallback OpenJobOperationCompleted;

        private System.Threading.SendOrPostCallback OpenJobExOperationCompleted;

        private System.Threading.SendOrPostCallback RenewLeaseOperationCompleted;

        private System.Threading.SendOrPostCallback ExecuteOperationCompleted;

        private System.Threading.SendOrPostCallback ExecuteExOperationCompleted;

        private System.Threading.SendOrPostCallback CloseJobOperationCompleted;

        private System.Threading.SendOrPostCallback BatchJobOperationCompleted;

        private System.Threading.SendOrPostCallback BatchJobExOperationCompleted;

        private System.Threading.SendOrPostCallback GetExpirationOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllJobsOperationCompleted;

        private System.Threading.SendOrPostCallback GetAllJobsExOperationCompleted;

        private System.Threading.SendOrPostCallback CloseExpiredJobsOperationCompleted;

        private System.Threading.SendOrPostCallback CloseAllJobsOperationCompleted;

        private System.Threading.SendOrPostCallback DiagOperationCompleted;

        private System.Threading.SendOrPostCallback DiagExOperationCompleted;

        /// <remarks/>
        public RCCServiceSoap()
        {
        }

        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;

        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;

        /// <remarks/>
        public event GetStatusCompletedEventHandler GetStatusCompleted;

        /// <remarks/>
        public event OpenJobCompletedEventHandler OpenJobCompleted;

        /// <remarks/>
        public event OpenJobExCompletedEventHandler OpenJobExCompleted;

        /// <remarks/>
        public event RenewLeaseCompletedEventHandler RenewLeaseCompleted;

        /// <remarks/>
        public event ExecuteCompletedEventHandler ExecuteCompleted;

        /// <remarks/>
        public event ExecuteExCompletedEventHandler ExecuteExCompleted;

        /// <remarks/>
        public event CloseJobCompletedEventHandler CloseJobCompleted;

        /// <remarks/>
        public event BatchJobCompletedEventHandler BatchJobCompleted;

        /// <remarks/>
        public event BatchJobExCompletedEventHandler BatchJobExCompleted;

        /// <remarks/>
        public event GetExpirationCompletedEventHandler GetExpirationCompleted;

        /// <remarks/>
        public event GetAllJobsCompletedEventHandler GetAllJobsCompleted;

        /// <remarks/>
        public event GetAllJobsExCompletedEventHandler GetAllJobsExCompleted;

        /// <remarks/>
        public event CloseExpiredJobsCompletedEventHandler CloseExpiredJobsCompleted;

        /// <remarks/>
        public event CloseAllJobsCompletedEventHandler CloseAllJobsCompleted;

        /// <remarks/>
        public event DiagCompletedEventHandler DiagCompleted;

        /// <remarks/>
        public event DiagExCompletedEventHandler DiagExCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/HelloWorld", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld()
        {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("HelloWorld", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndHelloWorld(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void HelloWorldAsync()
        {
            this.HelloWorldAsync(null);
        }

        /// <remarks/>
        public void HelloWorldAsync(object userState)
        {
            if ((this.HelloWorldOperationCompleted == null))
            {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }

        private void OnHelloWorldOperationCompleted(object arg)
        {
            if ((this.HelloWorldCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetVersion", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion()
        {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetVersion", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public string EndGetVersion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetVersionAsync()
        {
            this.GetVersionAsync(null);
        }

        /// <remarks/>
        public void GetVersionAsync(object userState)
        {
            if ((this.GetVersionOperationCompleted == null))
            {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }

        private void OnGetVersionOperationCompleted(object arg)
        {
            if ((this.GetVersionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetStatus", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Status GetStatus()
        {
            object[] results = this.Invoke("GetStatus", new object[0]);
            return ((Status)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetStatus(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetStatus", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public Status EndGetStatus(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Status)(results[0]));
        }

        /// <remarks/>
        public void GetStatusAsync()
        {
            this.GetStatusAsync(null);
        }

        /// <remarks/>
        public void GetStatusAsync(object userState)
        {
            if ((this.GetStatusOperationCompleted == null))
            {
                this.GetStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatusOperationCompleted);
            }
            this.InvokeAsync("GetStatus", new object[0], this.GetStatusOperationCompleted, userState);
        }

        private void OnGetStatusOperationCompleted(object arg)
        {
            if ((this.GetStatusCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatusCompleted(this, new GetStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/OpenJob", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OpenJobResult")]
        public LuaValue[] OpenJob(Job job, ScriptExecution script)
        {
            object[] results = this.Invoke("OpenJob", new object[] {
                        job,
                        script});
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginOpenJob(Job job, ScriptExecution script, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("OpenJob", new object[] {
                        job,
                        script}, callback, asyncState);
        }

        /// <remarks/>
        public LuaValue[] EndOpenJob(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public void OpenJobAsync(Job job, ScriptExecution script)
        {
            this.OpenJobAsync(job, script, null);
        }

        /// <remarks/>
        public void OpenJobAsync(Job job, ScriptExecution script, object userState)
        {
            if ((this.OpenJobOperationCompleted == null))
            {
                this.OpenJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenJobOperationCompleted);
            }
            this.InvokeAsync("OpenJob", new object[] {
                        job,
                        script}, this.OpenJobOperationCompleted, userState);
        }

        private void OnOpenJobOperationCompleted(object arg)
        {
            if ((this.OpenJobCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenJobCompleted(this, new OpenJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/OpenJobEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LuaValue[] OpenJobEx(Job job, ScriptExecution script)
        {
            object[] results = this.Invoke("OpenJobEx", new object[] {
                        job,
                        script});
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginOpenJobEx(Job job, ScriptExecution script, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("OpenJobEx", new object[] {
                        job,
                        script}, callback, asyncState);
        }

        /// <remarks/>
        public LuaValue[] EndOpenJobEx(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public void OpenJobExAsync(Job job, ScriptExecution script)
        {
            this.OpenJobExAsync(job, script, null);
        }

        /// <remarks/>
        public void OpenJobExAsync(Job job, ScriptExecution script, object userState)
        {
            if ((this.OpenJobExOperationCompleted == null))
            {
                this.OpenJobExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpenJobExOperationCompleted);
            }
            this.InvokeAsync("OpenJobEx", new object[] {
                        job,
                        script}, this.OpenJobExOperationCompleted, userState);
        }

        private void OnOpenJobExOperationCompleted(object arg)
        {
            if ((this.OpenJobExCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpenJobExCompleted(this, new OpenJobExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/RenewLease", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double RenewLease(string jobID, double expirationInSeconds)
        {
            object[] results = this.Invoke("RenewLease", new object[] {
                        jobID,
                        expirationInSeconds});
            return ((double)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRenewLease(string jobID, double expirationInSeconds, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RenewLease", new object[] {
                        jobID,
                        expirationInSeconds}, callback, asyncState);
        }

        /// <remarks/>
        public double EndRenewLease(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((double)(results[0]));
        }

        /// <remarks/>
        public void RenewLeaseAsync(string jobID, double expirationInSeconds)
        {
            this.RenewLeaseAsync(jobID, expirationInSeconds, null);
        }

        /// <remarks/>
        public void RenewLeaseAsync(string jobID, double expirationInSeconds, object userState)
        {
            if ((this.RenewLeaseOperationCompleted == null))
            {
                this.RenewLeaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenewLeaseOperationCompleted);
            }
            this.InvokeAsync("RenewLease", new object[] {
                        jobID,
                        expirationInSeconds}, this.RenewLeaseOperationCompleted, userState);
        }

        private void OnRenewLeaseOperationCompleted(object arg)
        {
            if ((this.RenewLeaseCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenewLeaseCompleted(this, new RenewLeaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/Execute", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExecuteResult", IsNullable = true)]
        public LuaValue[] Execute(string jobID, ScriptExecution script)
        {
            object[] results = this.Invoke("Execute", new object[] {
                        jobID,
                        script});
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginExecute(string jobID, ScriptExecution script, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Execute", new object[] {
                        jobID,
                        script}, callback, asyncState);
        }

        /// <remarks/>
        public LuaValue[] EndExecute(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public void ExecuteAsync(string jobID, ScriptExecution script)
        {
            this.ExecuteAsync(jobID, script, null);
        }

        /// <remarks/>
        public void ExecuteAsync(string jobID, ScriptExecution script, object userState)
        {
            if ((this.ExecuteOperationCompleted == null))
            {
                this.ExecuteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteOperationCompleted);
            }
            this.InvokeAsync("Execute", new object[] {
                        jobID,
                        script}, this.ExecuteOperationCompleted, userState);
        }

        private void OnExecuteOperationCompleted(object arg)
        {
            if ((this.ExecuteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteCompleted(this, new ExecuteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/ExecuteEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LuaValue[] ExecuteEx(string jobID, ScriptExecution script)
        {
            object[] results = this.Invoke("ExecuteEx", new object[] {
                        jobID,
                        script});
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginExecuteEx(string jobID, ScriptExecution script, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ExecuteEx", new object[] {
                        jobID,
                        script}, callback, asyncState);
        }

        /// <remarks/>
        public LuaValue[] EndExecuteEx(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public void ExecuteExAsync(string jobID, ScriptExecution script)
        {
            this.ExecuteExAsync(jobID, script, null);
        }

        /// <remarks/>
        public void ExecuteExAsync(string jobID, ScriptExecution script, object userState)
        {
            if ((this.ExecuteExOperationCompleted == null))
            {
                this.ExecuteExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExecuteExOperationCompleted);
            }
            this.InvokeAsync("ExecuteEx", new object[] {
                        jobID,
                        script}, this.ExecuteExOperationCompleted, userState);
        }

        private void OnExecuteExOperationCompleted(object arg)
        {
            if ((this.ExecuteExCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExecuteExCompleted(this, new ExecuteExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/CloseJob", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseJob(string jobID)
        {
            this.Invoke("CloseJob", new object[] {
                        jobID});
        }

        /// <remarks/>
        public System.IAsyncResult BeginCloseJob(string jobID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CloseJob", new object[] {
                        jobID}, callback, asyncState);
        }

        /// <remarks/>
        public void EndCloseJob(System.IAsyncResult asyncResult)
        {
            this.EndInvoke(asyncResult);
        }

        /// <remarks/>
        public void CloseJobAsync(string jobID)
        {
            this.CloseJobAsync(jobID, null);
        }

        /// <remarks/>
        public void CloseJobAsync(string jobID, object userState)
        {
            if ((this.CloseJobOperationCompleted == null))
            {
                this.CloseJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseJobOperationCompleted);
            }
            this.InvokeAsync("CloseJob", new object[] {
                        jobID}, this.CloseJobOperationCompleted, userState);
        }

        private void OnCloseJobOperationCompleted(object arg)
        {
            if ((this.CloseJobCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/BatchJob", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("BatchJobResult", IsNullable = true)]
        public LuaValue[] BatchJob(Job job, ScriptExecution script)
        {
            object[] results = this.Invoke("BatchJob", new object[] {
                        job,
                        script});
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBatchJob(Job job, ScriptExecution script, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BatchJob", new object[] {
                        job,
                        script}, callback, asyncState);
        }

        /// <remarks/>
        public LuaValue[] EndBatchJob(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public void BatchJobAsync(Job job, ScriptExecution script)
        {
            this.BatchJobAsync(job, script, null);
        }

        /// <remarks/>
        public void BatchJobAsync(Job job, ScriptExecution script, object userState)
        {
            if ((this.BatchJobOperationCompleted == null))
            {
                this.BatchJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchJobOperationCompleted);
            }
            this.InvokeAsync("BatchJob", new object[] {
                        job,
                        script}, this.BatchJobOperationCompleted, userState);
        }

        private void OnBatchJobOperationCompleted(object arg)
        {
            if ((this.BatchJobCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchJobCompleted(this, new BatchJobCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/BatchJobEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LuaValue[] BatchJobEx(Job job, ScriptExecution script)
        {
            object[] results = this.Invoke("BatchJobEx", new object[] {
                        job,
                        script});
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBatchJobEx(Job job, ScriptExecution script, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BatchJobEx", new object[] {
                        job,
                        script}, callback, asyncState);
        }

        /// <remarks/>
        public LuaValue[] EndBatchJobEx(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public void BatchJobExAsync(Job job, ScriptExecution script)
        {
            this.BatchJobExAsync(job, script, null);
        }

        /// <remarks/>
        public void BatchJobExAsync(Job job, ScriptExecution script, object userState)
        {
            if ((this.BatchJobExOperationCompleted == null))
            {
                this.BatchJobExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBatchJobExOperationCompleted);
            }
            this.InvokeAsync("BatchJobEx", new object[] {
                        job,
                        script}, this.BatchJobExOperationCompleted, userState);
        }

        private void OnBatchJobExOperationCompleted(object arg)
        {
            if ((this.BatchJobExCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BatchJobExCompleted(this, new BatchJobExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetExpiration", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetExpiration(string jobID)
        {
            object[] results = this.Invoke("GetExpiration", new object[] {
                        jobID});
            return ((double)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetExpiration(string jobID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetExpiration", new object[] {
                        jobID}, callback, asyncState);
        }

        /// <remarks/>
        public double EndGetExpiration(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((double)(results[0]));
        }

        /// <remarks/>
        public void GetExpirationAsync(string jobID)
        {
            this.GetExpirationAsync(jobID, null);
        }

        /// <remarks/>
        public void GetExpirationAsync(string jobID, object userState)
        {
            if ((this.GetExpirationOperationCompleted == null))
            {
                this.GetExpirationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExpirationOperationCompleted);
            }
            this.InvokeAsync("GetExpiration", new object[] {
                        jobID}, this.GetExpirationOperationCompleted, userState);
        }

        private void OnGetExpirationOperationCompleted(object arg)
        {
            if ((this.GetExpirationCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExpirationCompleted(this, new GetExpirationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetAllJobs", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetAllJobsResult", IsNullable = true)]
        public Job[] GetAllJobs()
        {
            object[] results = this.Invoke("GetAllJobs", new object[0]);
            return ((Job[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllJobs(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllJobs", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public Job[] EndGetAllJobs(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Job[])(results[0]));
        }

        /// <remarks/>
        public void GetAllJobsAsync()
        {
            this.GetAllJobsAsync(null);
        }

        /// <remarks/>
        public void GetAllJobsAsync(object userState)
        {
            if ((this.GetAllJobsOperationCompleted == null))
            {
                this.GetAllJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllJobsOperationCompleted);
            }
            this.InvokeAsync("GetAllJobs", new object[0], this.GetAllJobsOperationCompleted, userState);
        }

        private void OnGetAllJobsOperationCompleted(object arg)
        {
            if ((this.GetAllJobsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllJobsCompleted(this, new GetAllJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetAllJobsEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Job[] GetAllJobsEx()
        {
            object[] results = this.Invoke("GetAllJobsEx", new object[0]);
            return ((Job[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetAllJobsEx(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllJobsEx", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public Job[] EndGetAllJobsEx(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((Job[])(results[0]));
        }

        /// <remarks/>
        public void GetAllJobsExAsync()
        {
            this.GetAllJobsExAsync(null);
        }

        /// <remarks/>
        public void GetAllJobsExAsync(object userState)
        {
            if ((this.GetAllJobsExOperationCompleted == null))
            {
                this.GetAllJobsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllJobsExOperationCompleted);
            }
            this.InvokeAsync("GetAllJobsEx", new object[0], this.GetAllJobsExOperationCompleted, userState);
        }

        private void OnGetAllJobsExOperationCompleted(object arg)
        {
            if ((this.GetAllJobsExCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllJobsExCompleted(this, new GetAllJobsExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/CloseExpiredJobs", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CloseExpiredJobs()
        {
            object[] results = this.Invoke("CloseExpiredJobs", new object[0]);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCloseExpiredJobs(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CloseExpiredJobs", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public int EndCloseExpiredJobs(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void CloseExpiredJobsAsync()
        {
            this.CloseExpiredJobsAsync(null);
        }

        /// <remarks/>
        public void CloseExpiredJobsAsync(object userState)
        {
            if ((this.CloseExpiredJobsOperationCompleted == null))
            {
                this.CloseExpiredJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseExpiredJobsOperationCompleted);
            }
            this.InvokeAsync("CloseExpiredJobs", new object[0], this.CloseExpiredJobsOperationCompleted, userState);
        }

        private void OnCloseExpiredJobsOperationCompleted(object arg)
        {
            if ((this.CloseExpiredJobsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseExpiredJobsCompleted(this, new CloseExpiredJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/CloseAllJobs", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CloseAllJobs()
        {
            object[] results = this.Invoke("CloseAllJobs", new object[0]);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCloseAllJobs(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CloseAllJobs", new object[0], callback, asyncState);
        }

        /// <remarks/>
        public int EndCloseAllJobs(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void CloseAllJobsAsync()
        {
            this.CloseAllJobsAsync(null);
        }

        /// <remarks/>
        public void CloseAllJobsAsync(object userState)
        {
            if ((this.CloseAllJobsOperationCompleted == null))
            {
                this.CloseAllJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseAllJobsOperationCompleted);
            }
            this.InvokeAsync("CloseAllJobs", new object[0], this.CloseAllJobsOperationCompleted, userState);
        }

        private void OnCloseAllJobsOperationCompleted(object arg)
        {
            if ((this.CloseAllJobsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseAllJobsCompleted(this, new CloseAllJobsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/Diag", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DiagResult", IsNullable = true)]
        public LuaValue[] Diag(int type, string jobID)
        {
            object[] results = this.Invoke("Diag", new object[] {
                        type,
                        jobID});
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDiag(int type, string jobID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Diag", new object[] {
                        type,
                        jobID}, callback, asyncState);
        }

        /// <remarks/>
        public LuaValue[] EndDiag(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public void DiagAsync(int type, string jobID)
        {
            this.DiagAsync(type, jobID, null);
        }

        /// <remarks/>
        public void DiagAsync(int type, string jobID, object userState)
        {
            if ((this.DiagOperationCompleted == null))
            {
                this.DiagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDiagOperationCompleted);
            }
            this.InvokeAsync("Diag", new object[] {
                        type,
                        jobID}, this.DiagOperationCompleted, userState);
        }

        private void OnDiagOperationCompleted(object arg)
        {
            if ((this.DiagCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DiagCompleted(this, new DiagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/DiagEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public LuaValue[] DiagEx(int type, string jobID)
        {
            object[] results = this.Invoke("DiagEx", new object[] {
                        type,
                        jobID});
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDiagEx(int type, string jobID, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DiagEx", new object[] {
                        type,
                        jobID}, callback, asyncState);
        }

        /// <remarks/>
        public LuaValue[] EndDiagEx(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((LuaValue[])(results[0]));
        }

        /// <remarks/>
        public void DiagExAsync(int type, string jobID)
        {
            this.DiagExAsync(type, jobID, null);
        }

        /// <remarks/>
        public void DiagExAsync(int type, string jobID, object userState)
        {
            if ((this.DiagExOperationCompleted == null))
            {
                this.DiagExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDiagExOperationCompleted);
            }
            this.InvokeAsync("DiagEx", new object[] {
                        type,
                        jobID}, this.DiagExOperationCompleted, userState);
        }

        private void OnDiagExOperationCompleted(object arg)
        {
            if ((this.DiagExCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DiagExCompleted(this, new DiagExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public partial class Status : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string versionField;

        private int environmentCountField;

        /// <remarks/>
        public string version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }

        /// <remarks/>
        public int environmentCount
        {
            get
            {
                return this.environmentCountField;
            }
            set
            {
                this.environmentCountField = value;
                this.RaisePropertyChanged("environmentCount");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public partial class LuaValue : object, System.ComponentModel.INotifyPropertyChanged
    {

        private LuaType typeField;

        private string valueField;

        private LuaValue[] tableField;

        /// <remarks/>
        public LuaType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }

        /// <remarks/>
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }

        /// <remarks/>
        public LuaValue[] table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
                this.RaisePropertyChanged("table");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public enum LuaType
    {

        /// <remarks/>
        LUA_TNIL,

        /// <remarks/>
        LUA_TBOOLEAN,

        /// <remarks/>
        LUA_TNUMBER,

        /// <remarks/>
        LUA_TSTRING,

        /// <remarks/>
        LUA_TTABLE,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public partial class ScriptExecution : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string nameField;

        private string scriptField;

        private LuaValue[] argumentsField;

        /// <remarks/>
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        public string script
        {
            get
            {
                return this.scriptField;
            }
            set
            {
                this.scriptField = value;
                this.RaisePropertyChanged("script");
            }
        }

        /// <remarks/>
        public LuaValue[] arguments
        {
            get
            {
                return this.argumentsField;
            }
            set
            {
                this.argumentsField = value;
                this.RaisePropertyChanged("arguments");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public partial class Job : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string idField;

        private double expirationInSecondsField;

        private int categoryField;

        private double coresField;

        /// <remarks/>
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        public double expirationInSeconds
        {
            get
            {
                return this.expirationInSecondsField;
            }
            set
            {
                this.expirationInSecondsField = value;
                this.RaisePropertyChanged("expirationInSeconds");
            }
        }

        /// <remarks/>
        public int category
        {
            get
            {
                return this.categoryField;
            }
            set
            {
                this.categoryField = value;
                this.RaisePropertyChanged("category");
            }
        }

        /// <remarks/>
        public double cores
        {
            get
            {
                return this.coresField;
            }
            set
            {
                this.coresField = value;
                this.RaisePropertyChanged("cores");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetStatusCompletedEventHandler(object sender, GetStatusCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Status Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Status)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void OpenJobCompletedEventHandler(object sender, OpenJobCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal OpenJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public LuaValue[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((LuaValue[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void OpenJobExCompletedEventHandler(object sender, OpenJobExCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpenJobExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal OpenJobExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public LuaValue[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((LuaValue[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void RenewLeaseCompletedEventHandler(object sender, RenewLeaseCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RenewLeaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RenewLeaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public double Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void ExecuteCompletedEventHandler(object sender, ExecuteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ExecuteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public LuaValue[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((LuaValue[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void ExecuteExCompletedEventHandler(object sender, ExecuteExCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExecuteExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ExecuteExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public LuaValue[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((LuaValue[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void CloseJobCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void BatchJobCompletedEventHandler(object sender, BatchJobCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BatchJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public LuaValue[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((LuaValue[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void BatchJobExCompletedEventHandler(object sender, BatchJobExCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BatchJobExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BatchJobExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public LuaValue[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((LuaValue[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetExpirationCompletedEventHandler(object sender, GetExpirationCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExpirationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetExpirationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public double Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetAllJobsCompletedEventHandler(object sender, GetAllJobsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAllJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Job[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Job[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void GetAllJobsExCompletedEventHandler(object sender, GetAllJobsExCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllJobsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetAllJobsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public Job[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((Job[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void CloseExpiredJobsCompletedEventHandler(object sender, CloseExpiredJobsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseExpiredJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CloseExpiredJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void CloseAllJobsCompletedEventHandler(object sender, CloseAllJobsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseAllJobsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CloseAllJobsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void DiagCompletedEventHandler(object sender, DiagCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DiagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DiagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public LuaValue[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((LuaValue[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    public delegate void DiagExCompletedEventHandler(object sender, DiagExCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DiagExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DiagExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public LuaValue[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((LuaValue[])(this.results[0]));
            }
        }
    }
}

namespace Roblox.Grid.Rcc.Server
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Web.Services.WebServiceAttribute(Namespace = "http://roblox.com/")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "RCCServiceSoap", Namespace = "http://roblox.com/")]
    public abstract partial class RCCServiceSoap : System.Web.Services.WebService
    {

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/HelloWorld", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public abstract string HelloWorld();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetVersion", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public abstract string GetVersion();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetStatus", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public abstract Status GetStatus();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/OpenJob", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OpenJobResult")]
        public abstract LuaValue[] OpenJob(Job job, ScriptExecution script);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/OpenJobEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public abstract LuaValue[] OpenJobEx(Job job, ScriptExecution script);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/RenewLease", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public abstract double RenewLease(string jobID, double expirationInSeconds);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/Execute", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExecuteResult", IsNullable = true)]
        public abstract LuaValue[] Execute(string jobID, ScriptExecution script);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/ExecuteEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public abstract LuaValue[] ExecuteEx(string jobID, ScriptExecution script);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/CloseJob", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public abstract void CloseJob(string jobID);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/BatchJob", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("BatchJobResult", IsNullable = true)]
        public abstract LuaValue[] BatchJob(Job job, ScriptExecution script);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/BatchJobEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public abstract LuaValue[] BatchJobEx(Job job, ScriptExecution script);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetExpiration", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public abstract double GetExpiration(string jobID);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetAllJobs", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetAllJobsResult", IsNullable = true)]
        public abstract Job[] GetAllJobs();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetAllJobsEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public abstract Job[] GetAllJobsEx();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/CloseExpiredJobs", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public abstract int CloseExpiredJobs();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/CloseAllJobs", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public abstract int CloseAllJobs();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/Diag", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DiagResult", IsNullable = true)]
        public abstract LuaValue[] Diag(int type, string jobID);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/DiagEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public abstract LuaValue[] DiagEx(int type, string jobID);
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public partial class Status : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string versionField;

        private int environmentCountField;

        /// <remarks/>
        public string version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }

        /// <remarks/>
        public int environmentCount
        {
            get
            {
                return this.environmentCountField;
            }
            set
            {
                this.environmentCountField = value;
                this.RaisePropertyChanged("environmentCount");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public partial class LuaValue : object, System.ComponentModel.INotifyPropertyChanged
    {

        private LuaType typeField;

        private string valueField;

        private LuaValue[] tableField;

        /// <remarks/>
        public LuaType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }

        /// <remarks/>
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }

        /// <remarks/>
        public LuaValue[] table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
                this.RaisePropertyChanged("table");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public enum LuaType
    {

        /// <remarks/>
        LUA_TNIL,

        /// <remarks/>
        LUA_TBOOLEAN,

        /// <remarks/>
        LUA_TNUMBER,

        /// <remarks/>
        LUA_TSTRING,

        /// <remarks/>
        LUA_TTABLE,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public partial class ScriptExecution : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string nameField;

        private string scriptField;

        private LuaValue[] argumentsField;

        /// <remarks/>
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        public string script
        {
            get
            {
                return this.scriptField;
            }
            set
            {
                this.scriptField = value;
                this.RaisePropertyChanged("script");
            }
        }

        /// <remarks/>
        public LuaValue[] arguments
        {
            get
            {
                return this.argumentsField;
            }
            set
            {
                this.argumentsField = value;
                this.RaisePropertyChanged("arguments");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public partial class Job : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string idField;

        private double expirationInSecondsField;

        private int categoryField;

        private double coresField;

        /// <remarks/>
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        public double expirationInSeconds
        {
            get
            {
                return this.expirationInSecondsField;
            }
            set
            {
                this.expirationInSecondsField = value;
                this.RaisePropertyChanged("expirationInSeconds");
            }
        }

        /// <remarks/>
        public int category
        {
            get
            {
                return this.categoryField;
            }
            set
            {
                this.categoryField = value;
                this.RaisePropertyChanged("category");
            }
        }

        /// <remarks/>
        public double cores
        {
            get
            {
                return this.coresField;
            }
            set
            {
                this.coresField = value;
                this.RaisePropertyChanged("cores");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}

// 
// This source code was auto-generated by wsdl, Version=4.8.3928.0.
// 
namespace Roblox.Grid.Rcc.ServerInterface
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "RCCServiceSoap", Namespace = "http://roblox.com/")]
    public interface IRCCServiceSoap
    {

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/HelloWorld", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        string HelloWorld();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetVersion", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        string GetVersion();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetStatus", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        Status GetStatus();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/OpenJob", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OpenJobResult")]
        LuaValue[] OpenJob(Job job, ScriptExecution script);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/OpenJobEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        LuaValue[] OpenJobEx(Job job, ScriptExecution script);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/RenewLease", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        double RenewLease(string jobID, double expirationInSeconds);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/Execute", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExecuteResult", IsNullable = true)]
        LuaValue[] Execute(string jobID, ScriptExecution script);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/ExecuteEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        LuaValue[] ExecuteEx(string jobID, ScriptExecution script);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/CloseJob", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        void CloseJob(string jobID);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/BatchJob", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("BatchJobResult", IsNullable = true)]
        LuaValue[] BatchJob(Job job, ScriptExecution script);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/BatchJobEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        LuaValue[] BatchJobEx(Job job, ScriptExecution script);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetExpiration", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        double GetExpiration(string jobID);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetAllJobs", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("GetAllJobsResult", IsNullable = true)]
        Job[] GetAllJobs();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/GetAllJobsEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        Job[] GetAllJobsEx();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/CloseExpiredJobs", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        int CloseExpiredJobs();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/CloseAllJobs", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        int CloseAllJobs();

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/Diag", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DiagResult", IsNullable = true)]
        LuaValue[] Diag(int type, string jobID);

        /// <remarks/>
        [System.Web.Services.WebMethodAttribute()]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://roblox.com/DiagEx", RequestNamespace = "http://roblox.com/", ResponseNamespace = "http://roblox.com/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        LuaValue[] DiagEx(int type, string jobID);
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public partial class Status : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string versionField;

        private int environmentCountField;

        /// <remarks/>
        public string version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
                this.RaisePropertyChanged("version");
            }
        }

        /// <remarks/>
        public int environmentCount
        {
            get
            {
                return this.environmentCountField;
            }
            set
            {
                this.environmentCountField = value;
                this.RaisePropertyChanged("environmentCount");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public partial class LuaValue : object, System.ComponentModel.INotifyPropertyChanged
    {

        private LuaType typeField;

        private string valueField;

        private LuaValue[] tableField;

        /// <remarks/>
        public LuaType type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
                this.RaisePropertyChanged("type");
            }
        }

        /// <remarks/>
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
                this.RaisePropertyChanged("value");
            }
        }

        /// <remarks/>
        public LuaValue[] table
        {
            get
            {
                return this.tableField;
            }
            set
            {
                this.tableField = value;
                this.RaisePropertyChanged("table");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public enum LuaType
    {

        /// <remarks/>
        LUA_TNIL,

        /// <remarks/>
        LUA_TBOOLEAN,

        /// <remarks/>
        LUA_TNUMBER,

        /// <remarks/>
        LUA_TSTRING,

        /// <remarks/>
        LUA_TTABLE,
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public partial class ScriptExecution : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string nameField;

        private string scriptField;

        private LuaValue[] argumentsField;

        /// <remarks/>
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }

        /// <remarks/>
        public string script
        {
            get
            {
                return this.scriptField;
            }
            set
            {
                this.scriptField = value;
                this.RaisePropertyChanged("script");
            }
        }

        /// <remarks/>
        public LuaValue[] arguments
        {
            get
            {
                return this.argumentsField;
            }
            set
            {
                this.argumentsField = value;
                this.RaisePropertyChanged("arguments");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.8.3928.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://roblox.com/")]
    public partial class Job : object, System.ComponentModel.INotifyPropertyChanged
    {

        private string idField;

        private double expirationInSecondsField;

        private int categoryField;

        private double coresField;

        /// <remarks/>
        public string id
        {
            get
            {
                return this.idField;
            }
            set
            {
                this.idField = value;
                this.RaisePropertyChanged("id");
            }
        }

        /// <remarks/>
        public double expirationInSeconds
        {
            get
            {
                return this.expirationInSecondsField;
            }
            set
            {
                this.expirationInSecondsField = value;
                this.RaisePropertyChanged("expirationInSeconds");
            }
        }

        /// <remarks/>
        public int category
        {
            get
            {
                return this.categoryField;
            }
            set
            {
                this.categoryField = value;
                this.RaisePropertyChanged("category");
            }
        }

        /// <remarks/>
        public double cores
        {
            get
            {
                return this.coresField;
            }
            set
            {
                this.coresField = value;
                this.RaisePropertyChanged("cores");
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
